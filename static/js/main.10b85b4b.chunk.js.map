{"version":3,"sources":["components/Card.js","components/CardList.js","components/AddNewUser.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardsArray","addNew","map","user","i","AddNewUser","card","placeholder","type","onChange","SearchBox","searchfield","searchChange","tupe","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","axios","get","then","response","console","log","data","catch","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yOAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OAEA,sBAAKC,UAAY,mDAAjB,UACI,qBAAKC,IAAK,SAASC,IAAG,+BAA2BH,KAClD,gCACK,6BAAKF,IACL,4BAAIC,WCWDK,EAlBE,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,OACTC,GAD6B,EAAZC,OACJF,EAAOG,KAAI,SAACC,EAAMC,GAChC,OAAQ,cAAC,EAAD,CAGLV,GAAIK,EAAOK,GAAGV,GACdF,KAAQO,EAAOK,GAAGZ,KAClBC,MAASM,EAAOK,GAAGX,OAHdW,OAOb,OACI,8BACKJ,KCYEK,EA1BI,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAGjB,OACI,sBAAKX,UAAW,KAAhB,UACI,uBAAOA,UAAU,wCACjBY,YAAa,OACbC,KAAO,OACPC,SAAYH,IAEZ,uBAAOX,UAAU,wCACjBY,YAAa,WACbC,KAAO,WACPC,SAAYH,IAEZ,uBAAOX,UAAU,uCACjBY,YAAa,QACbC,KAAO,QACPC,SAAYH,QCHTI,EAfG,SAAC,GAAuC,EAAtCC,YAAuC,IAA1BC,EAAyB,EAAzBA,aAAaX,EAAY,EAAZA,OAC1C,OACI,sBAAKN,UAAW,MAAhB,UACK,uBACGA,UAAU,uCACVkB,KAAO,SACPN,YAAc,gBACdE,SAAYG,IAEhB,cAAC,EAAD,CAAYN,KAAQL,QCEjBa,EAXA,SAACC,GACf,OACI,qBAAKC,MAAQ,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAAtE,SACKJ,EAAMK,YCgBDC,E,kDAlBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAM,CACPC,UAAU,GAHA,E,8DAOAC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAGxB,OAAGG,KAAKJ,MAAMC,SACH,2DAEJG,KAAKX,MAAMK,a,GAfAQ,a,iBCqEZC,E,kDAtDX,aAAc,IAAD,8BACT,gBAsBJC,eAAe,SAACC,GACZ,EAAKJ,SAAS,CAAChB,YAAaoB,EAAMC,OAAOC,SAtBzC,EAAKX,MAAQ,CACTvB,OAAQ,GACRY,YAAa,IAJR,E,gEAOG,IAAD,OACfuB,IAAMC,IAAI,8CACTC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZ,EAAKV,SAAS,CAAC5B,OAAOsC,EAASG,UAElCC,OAAM,SAAAjB,GACHc,QAAQC,IAAIf,Q,+BAeN,IAAD,EACuBE,KAAKJ,MAA1BvB,EADF,EACEA,OAAOY,EADT,EACSA,YACP+B,EAAiB3C,EAAO4C,QAAO,SAAAC,GACtC,OAAOA,EAAMpD,KAAKqD,oBAAoBC,SAASnC,EAAYkC,wBAE/D,OAAsB,IAAlB9C,EAAOgD,OACA,oBAAIpD,UAAU,KAAd,qBAIH,sBAAKA,UAAW,KAAhB,UACI,6CACA,cAAC,EAAD,CAAWiB,aAAec,KAAKI,iBAC/B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU/B,OAAQ2C,e,GA7CxBd,aCJHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCIdO,IAASC,OACT,cAAC,EAAD,IAEEC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.10b85b4b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    // const {name, email, id} = props;\r\n    return(\r\n       \r\n    <div className = 'bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5'>\r\n        <img alt ='robots' src= {`https://robohash.org/${id}`}/>\r\n       <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div> \r\n    </div>\r\n    );\r\n}\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots, addNew}) => {\r\n    const cardsArray = robots.map((user, i) => {\r\n         return( <Card \r\n          \r\n            key={i}\r\n            id={robots[i].id}\r\n            name = {robots[i].name} \r\n            email = {robots[i].email}\r\n            />   \r\n            ); \r\n    })\r\n    return (\r\n        <div>\r\n            {cardsArray}\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst AddNewUser = ({card}) => {\r\n    \r\n\r\n    return(\r\n        <div className= 'tc'> \r\n            <input className='pa1 ba br3  b--green bg-lightest-blue'\r\n            placeholder= 'name'\r\n            type = 'name'\r\n            onChange = {card}>\r\n            </input>\r\n            <input className='pa1 ba br3  b--green bg-lightest-blue'\r\n            placeholder= 'username'\r\n            type = 'username'\r\n            onChange = {card}>\r\n            </input>\r\n            <input className='pa1 ba br3 b--green bg-lightest-blue'\r\n            placeholder= 'email'\r\n            type = 'email'\r\n            onChange = {card}>\r\n            </input>\r\n            \r\n        </div>\r\n      \r\n    );\r\n}\r\n\r\nexport default AddNewUser; ","import React from 'react';\r\nimport AddNewUser from './AddNewUser';\r\nconst SearchBox = ({searchfield, searchChange,addNew}) => {\r\n    return(\r\n        <div className= 'pa2'> \r\n             <input\r\n                className='pa3 ba br3 b--green bg-lightest-blue'\r\n                tupe = 'search'\r\n                placeholder = 'search robots'\r\n                onChange = {searchChange}\r\n            />\r\n            <AddNewUser card = {addNew}/>\r\n        </div>\r\n      \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n return (\r\n     <div style= {{overflowY: 'scroll', border: '1px solid black', height: '1000px'}}>\r\n         {props.children}\r\n     </div>\r\n );\r\n\r\n\r\n};\r\n\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true })\r\n    }\r\n    render(){\r\n         if(this.state.hasError){\r\n             return <h1>Ooooops. That is not good</h1>\r\n         }\r\n         return this.props.children\r\n    }\r\n\r\n}\r\nexport default ErrorBoundry;","\r\nimport React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\n// import { robots } from \"./robots\";\r\n\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n// const state = {\r\n//     robots: robots,\r\n//     searchfield: ''\r\n// }\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = { \r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\ncomponentDidMount(){\r\n    axios.get('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => {\r\n        console.log(response);\r\n        this.setState({robots:response.data})\r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n    })\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchfield: event.target.value})\r\n       }\r\n\r\n\r\n\r\n    render() {\r\n        const {robots,searchfield}= this.state;\r\n         const filteredRobots = robots.filter(robot =>{\r\n        return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase())\r\n    })\r\n    if( robots.length === 0){\r\n        return <h1 className='tc' >Loading</h1>\r\n    }else\r\n{\r\n            return(\r\n            <div className= 'tc'>\r\n                <h1>RoboFriends</h1>\r\n                <SearchBox searchChange= {this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/> \r\n                    </ErrorBoundry>\r\n           \r\n            </Scroll>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n  \r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './containers/App.css';\n\nimport App from './containers/App';\n// import Navbar from './Navbar';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n<App/>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}